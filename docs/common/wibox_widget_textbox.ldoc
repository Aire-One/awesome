--- The textbox font.
--
-- @beautiful beautiful.font
-- @param string
-- @baseclass wibox.widget.textbox

--- Get the preferred size of a textbox.
--
-- This returns the size that the textbox would use if infinite space were
-- available.
--
-- @method get_preferred_size
-- @tparam integer|screen s The screen on which the textbox will be displayed.
-- @treturn number The preferred width.
-- @treturn number The preferred height.
-- @baseclass wibox.widget.textbox

--- Get the preferred height of a textbox at a given width.
--
-- This returns the height that the textbox would use when it is limited to the
-- given width.
--
-- @method get_height_for_width
-- @tparam number width The available width.
-- @tparam integer|screen s The screen on which the textbox will be displayed.
-- @treturn number The needed height.
-- @baseclass wibox.widget.textbox

--- Get the preferred size of a textbox.
--
-- This returns the size that the textbox would use if infinite space were
-- available.
--
-- @method get_preferred_size_at_dpi
-- @tparam number dpi The DPI value to render at.
-- @treturn number The preferred width.
-- @treturn number The preferred height.
-- @baseclass wibox.widget.textbox

--- Get the preferred height of a textbox at a given width.
--
-- This returns the height that the textbox would use when it is limited to the
-- given width.
--
-- @method get_height_for_width_at_dpi
-- @tparam number width The available width.
-- @tparam number dpi The DPI value to render at.
-- @treturn number The needed height.
-- @baseclass wibox.widget.textbox

--- Set the text of the textbox.(with
-- [Pango markup](https://developer.gnome.org/pango/stable/pango-Markup.html)).
--
-- @tparam string text The text to set. This can contain pango markup (e.g.
--   `<b>bold</b>`). You can use `gears.string.escape` to escape
--   parts of it.
-- @method set_markup_silently
-- @treturn[1] boolean true
-- @treturn[2] boolean false
-- @treturn[2] string Error message explaining why the markup was invalid.
-- @baseclass wibox.widget.textbox

--- Set the text of the textbox (with
-- [Pango markup](https://developer.gnome.org/pango/stable/pango-Markup.html)).
--
-- @property markup
-- @tparam string text The text to set. This can contain pango markup (e.g.
--   `<b>bold</b>`). You can use `gears.string.escape` to escape
--   parts of it.
-- @propemits true false
-- @see text
-- @baseclass wibox.widget.textbox

--- Set a textbox text.
--
-- @property text
-- @tparam string text The text to display. Pango markup is ignored and shown
--  as-is.
-- @propemits true false
-- @see markup
-- @baseclass wibox.widget.textbox

--- Set a textbox ellipsize mode.
--
-- Valid values are:
--
-- * **start**
-- * **middle**
-- * **end**
--
-- @property ellipsize
-- @tparam string mode Where should long lines be shortened? "start", "middle"
--  or "end".
-- @propemits true false
-- @baseclass wibox.widget.textbox

--- Set a textbox wrap mode.
--
-- Valid values are:
--
-- * **word**
-- * **char**
-- * **word_char**
--
-- @property wrap
-- @tparam string mode Where to wrap? After "word", "char" or "word_char".
-- @propemits true false
-- @baseclass wibox.widget.textbox

--- The textbox' vertical alignment.
--
-- Valid values are:
--
-- * **top**
-- * **center**
-- * **bottom**
--
-- @property valign
-- @tparam string mode Where should the textbox be drawn? "top", "center" or
--  "bottom".
-- @propemits true false
-- @baseclass wibox.widget.textbox

--- Set a textbox horizontal alignment.
--
-- Valid values are:
--
-- * **left**
-- * **center**
-- * **right**
--
-- @property align
-- @tparam string mode Where should the textbox be drawn? "left", "center" or
--  "right".
-- @propemits true false
-- @baseclass wibox.widget.textbox

--- Set a textbox font.
--
-- @property font
-- @tparam string font The font description as string.
-- @propemits true false
-- @propbeautiful
-- @baseclass wibox.widget.textbox
